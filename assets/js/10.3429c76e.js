(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{254:function(t,s,a){"use strict";a.r(s);var n=a(28),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"面试题-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题-js"}},[t._v("#")]),t._v(" 面试题 js")]),t._v(" "),a("h3",{attrs:{id:"_1-判断-js-类型的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-判断-js-类型的方式"}},[t._v("#")]),t._v(" 1.判断 js 类型的方式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("typeof 可以判断出'string','number','boolean','undefined','symbol',但判断 typeof(null) 时值为 'object'; 判断数组和对象时值均为 'object'")])]),t._v(" "),a("li",[a("p",[t._v("instanceof 原理是 构造函数的 prototype 属性是否出现在对象的原型链中的任何位置")])]),t._v(" "),a("li",[a("p",[t._v("Object.prototype.toString.call() 常用于判断浏览器内置对象,对于所有基本的数据类型都能进行判断，即使是 null 和 undefined")])]),t._v(" "),a("li",[a("p",[t._v("Array.isArray() 用于判断是否为数组")])])]),t._v(" "),a("h3",{attrs:{id:"_2-字符串操作函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符串操作函数"}},[t._v("#")]),t._v(" 2.字符串操作函数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("concat() – 将两个或多个字符的文本组合起来，返回一个新的字符串。")])]),t._v(" "),a("li",[a("p",[t._v("indexOf() – 返回字符串中一个子串第一处出现的索引。如果没有匹配项，返回 -1 。")])]),t._v(" "),a("li",[a("p",[t._v("charAt() – 返回指定位置的字符。")])]),t._v(" "),a("li",[a("p",[t._v("lastIndexOf() – 返回字符串中一个子串最后一处出现的索引，如果没有匹配项，返回 -1 。")])]),t._v(" "),a("li",[a("p",[t._v("match() – 检查一个字符串是否匹配一个正则表达式。")])]),t._v(" "),a("li",[a("p",[t._v("substr() 函数 -- 返回从 string 的 startPos 位置，长度为 length 的字符串")])]),t._v(" "),a("li",[a("p",[t._v("substring() – 返回字符串的一个子串。传入参数是起始位置和结束位置。")])]),t._v(" "),a("li",[a("p",[t._v("slice() – 提取字符串的一部分，并返回一个新字符串。")])]),t._v(" "),a("li",[a("p",[t._v("replace() – 用来查找匹配一个正则表达式的字符串，然后使用新字符串代替匹配的字符串。")])]),t._v(" "),a("li",[a("p",[t._v("search() – 执行一个正则表达式匹配查找。如果查找成功，返回字符串中匹配的索引值。否则返回 -1 。")])]),t._v(" "),a("li",[a("p",[t._v("split() – 通过将字符串划分成子串，将一个字符串做成一个字符串数组。")])]),t._v(" "),a("li",[a("p",[t._v("length – 返回字符串的长度，所谓字符串的长度是指其包含的字符的个数。")])]),t._v(" "),a("li",[a("p",[t._v("toLowerCase() – 将整个字符串转成小写字母。")])]),t._v(" "),a("li",[a("p",[t._v("toUpperCase() – 将整个字符串转成大写字母。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-array-相关的属性和方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-array-相关的属性和方法"}},[t._v("#")]),t._v(" 3.Array 相关的属性和方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("concat() 连接两个或更多的数组，并返回结果。")])]),t._v(" "),a("li",[a("p",[t._v("join() 把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。")])]),t._v(" "),a("li",[a("p",[t._v("pop() 删除并返回数组的最后一个元素。")])]),t._v(" "),a("li",[a("p",[t._v("shift() 删除并返回数组的第一个元素")])]),t._v(" "),a("li",[a("p",[t._v("push() 向数组的末尾添加一个或更多元素，并返回新的长度。")])]),t._v(" "),a("li",[a("p",[t._v("unshift() 向数组的开头添加一个或更多元素，并返回新的长度。")])]),t._v(" "),a("li",[a("p",[t._v("reverse() 颠倒数组中元素的顺序。")])]),t._v(" "),a("li",[a("p",[t._v("slice() 从某个已有的数组返回选定的元素")])]),t._v(" "),a("li",[a("p",[t._v("sort() 对数组的元素进行排序")])]),t._v(" "),a("li",[a("p",[t._v("splice() 删除元素，并向数组添加新元素。")])]),t._v(" "),a("li",[a("p",[t._v("toSource() 返回该对象的源代码。")])]),t._v(" "),a("li",[a("p",[t._v("toString() 把数组转换为字符串，并返回结果。")])]),t._v(" "),a("li",[a("p",[t._v("toLocaleString() 把数组转换为本地数组，并返回结果。")])]),t._v(" "),a("li",[a("p",[t._v("valueOf() 返回数组对象的原始值")])])]),t._v(" "),a("h3",{attrs:{id:"_4-闭包的概念？优缺点？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-闭包的概念？优缺点？"}},[t._v("#")]),t._v(" 4.闭包的概念？优缺点？")]),t._v(" "),a("p",[t._v("闭包的概念：闭包就是能读取其他函数内部变量的函数。")]),t._v(" "),a("blockquote",[a("p",[t._v("优点：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("避免全局变量的污染")])]),t._v(" "),a("li",[a("p",[t._v("希望一个变量长期存储在内存中（缓存变量）")])])]),t._v(" "),a("blockquote",[a("p",[t._v("缺点：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("内存泄露（消耗）")])]),t._v(" "),a("li",[a("p",[t._v("常驻内存，增加内存使用量")])])]),t._v(" "),a("h3",{attrs:{id:"_5-浅拷贝和深拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-浅拷贝和深拷贝"}},[t._v("#")]),t._v(" 5.浅拷贝和深拷贝")]),t._v(" "),a("blockquote",[a("p",[t._v("浅拷贝")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Object.assign()")])]),t._v(" "),a("li",[a("p",[t._v("Array.prototype.slice()")])]),t._v(" "),a("li",[a("p",[t._v("扩展运算符 ...")])])]),t._v(" "),a("blockquote",[a("p",[t._v("深拷贝")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JSON.parse(JSON.stringify())")])]),t._v(" "),a("li",[a("p",[t._v("递归函数")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果不是引用类型，直接返回")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果是引用类型，遍历属性")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" attr "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果某个属性还是引用类型，递归调用")]),t._v("\n\t\t\tnewObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("attr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("attr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newObj\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-数组去重的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-数组去重的方法"}},[t._v("#")]),t._v(" 6.数组去重的方法")]),t._v(" "),a("blockquote",[a("p",[t._v("ES6 的 Set")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("reduce()")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cur")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ar\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("filter()")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这种方法会有一个问题：[1,'1']会被当做相同元素，最终输入[1]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// indexOf() 方法可返回某个指定的 字符串值 在字符串中首次出现的位置")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" index\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_7-dom-事件有哪些阶段？谈谈对事件代理的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-dom-事件有哪些阶段？谈谈对事件代理的理解"}},[t._v("#")]),t._v(" 7.DOM 事件有哪些阶段？谈谈对事件代理的理解")]),t._v(" "),a("p",[t._v("分为三大阶段：捕获阶段--目标阶段--冒泡阶段")]),t._v(" "),a("p",[t._v("事件代理简单说就是：事件不直接绑定到某元素上，而是绑定到该元素的父元素上，进行触发事件操作时(例如'click')，再通过条件判断，执行事件触发后的语句(例如'alert(e.target.innerHTML)')")]),t._v(" "),a("p",[t._v("好处：(1)使代码更简洁；(2)节省内存开销")]),t._v(" "),a("h3",{attrs:{id:"_8-什么是跨域？跨域请求资源的解决方法有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-什么是跨域？跨域请求资源的解决方法有哪些？"}},[t._v("#")]),t._v(" 8.什么是跨域？跨域请求资源的解决方法有哪些？")]),t._v(" "),a("p",[t._v("由于浏览器同源策略，凡是发送请求 url 的协议、域名、端口三者之间任意一与当前页面地址不同即为跨域。存在跨域的情况：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("网络协议不同，如 http 协议访问 https 协议。")])]),t._v(" "),a("li",[a("p",[t._v("端口不同，如 80 端口访问 8080 端口。")])]),t._v(" "),a("li",[a("p",[t._v("域名不同，如 qianduanblog.com 访问 baidu.com。")])]),t._v(" "),a("li",[a("p",[t._v("子域名不同，如 abc.qianduanblog.com 访问 def.qianduanblog.com。")])]),t._v(" "),a("li",[a("p",[t._v("域名和域名对应 ip,如 www.a.com 访问 20.205.28.90.")])])]),t._v(" "),a("blockquote",[a("p",[t._v("解决办法")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("porxy 代理")])]),t._v(" "),a("li",[a("p",[t._v("CORS")])]),t._v(" "),a("li",[a("p",[t._v("jsonp 缺点：这种方式无法发送 post 请求（这里），另外要确定 jsonp 的请求是否失败并不容易，大多数框架的实现都是结合超时时间来判定。")])])]),t._v(" "),a("h3",{attrs:{id:"_9-谈谈垃圾回收机制方式及内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-谈谈垃圾回收机制方式及内存管理"}},[t._v("#")]),t._v(" 9.谈谈垃圾回收机制方式及内存管理")]),t._v(" "),a("blockquote",[a("p",[t._v("定义和用法：垃圾回收机制(GC:Garbage Collection),执行环境负责管理代码执行过程中使用的内存。")])]),t._v(" "),a("blockquote",[a("p",[t._v("原理：垃圾收集器会定期（周期性）找出那些不在继续使用的变量，然后释放其内存。但是这个过程不是实时的，因为其开销比较大，所以垃圾回收器会按照固定的时间间隔周期性的执行。")])]),t._v(" "),a("blockquote",[a("p",[t._v("垃圾回收策略：标记清除(较为常用)和引用计数。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("标记清除：")]),t._v(" "),a("p",[t._v('定义和用法：当变量进入环境时，将变量标记"进入环境"，当变量离开环境时，标记为："离开环境"。某一个时刻，垃圾回收器会过滤掉环境中的变量，以及被环境变量引用的变量，剩下的就是被视为准备回收的变量。')]),t._v(" "),a("p",[t._v("到目前为止，IE、Firefox、Opera、Chrome、Safari 的 js 实现使用的都是标记清除的垃圾回收策略或类似的策略，只不过垃圾收集的时间间隔互不相同。")])]),t._v(" "),a("li",[a("p",[t._v("引用计数：")]),t._v(" "),a("p",[t._v("定义和用法：引用计数是跟踪记录每个值被引用的次数。")]),t._v(" "),a("p",[t._v("基本原理：就是变量的引用次数，被引用一次则加 1，当这个引用计数为 0 时，被视为准备回收的对象。")])])]),t._v(" "),a("h3",{attrs:{id:"_10-谈谈垃圾回收机制方式及内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-谈谈垃圾回收机制方式及内存管理"}},[t._v("#")]),t._v(" 10.谈谈垃圾回收机制方式及内存管理")])])}),[],!1,null,null,null);s.default=r.exports}}]);